
/**
 * Framework enumeration, helpful for minification
 */
var methodHttp = {
	post: "POST",
	get: "GET",
	put: "PUT",
	delete: "DELETE"
}


$('.loginForm').on('submit', function () {

	var loginForm = $('.loginForm').serializeArray();
	var loginFormObject = {};
 
 $.each(loginForm,
	 function(i, v) {
		 loginFormObject[v.name] = v.value;
	 });
	 console.log("loginFormObject  " + JSON.stringify(loginFormObject)) ;
	 console.log("loginFormObject username " + loginFormObject.username)	;
	 console.log("loginFormObject secretkey " + loginFormObject.secretkey)	;
	 

 fetch( "http://localhost:8080/api/v1/mailing/login", {
	 method: methodHttp.post,
	 mode: "cors",
	 cache: "no-store",
	 headers: {
		 "Accept": "application/json",
		 "Content-Type": "application/json",
		 "Authorization": "Bearer " + _genJWS(loginFormObject.secretkey, loginFormObject.username)				
	 },
	 body: JSON.stringify( loginFormObject )
 }).then( function( response ) {

	 console.log( response );
	 return response.json();

 }).then( function( data ) {

	 xny_login.secretkey = data.secretkey;
	 console.log( data.secretkey );
	 xny_login.isConnected = true;

 }).catch( function( error ) {
	 console.log( "ERROR" )
	 console.log( error );

 });
	 return false;
 });

/**
 * Build a JWS with the key generated by server and userName
 */
function _genJWS(secretkey, userName){
	console.log("secretkey : " + secretkey);
	console.log("userName : " + userName);
	var sHead = {
		"alg": "HS256",
		"typ": "JWT"
	  }
	
	var sPayload = {
		"sub": "1234567890",
		"name": userName,
		"iat": 1516239022
	  };
	
	var sResult = null;
	try {
	  sResult = KJUR.jws.JWS.sign(sHead.alg, sHead, sPayload, secretkey);
	  console.log("_genJWS : " + sResult);
	  return sResult;
	} catch (ex) {
	  alert("Error: " + ex);
	}

}
